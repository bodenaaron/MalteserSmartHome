<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        ZeIy+jaue0saC+DQxRAAOL//XlKR2MTryxMljQdwyGIIAJzPg+WHSioRm+jbuT5Z0pgAhyyGAMD5fKik
        ArENry1eTggcmxgCAGd7pvQbzFN52JYHShob4FDFEAA420PltpKKw7Z8tqSxAQ5VDAGAs3293FRScdiW
        j5U0NsChiiEAcLYvl229++Nq7ixpbIBDFUMA4GwrfgPy8ZLGBjhUMQQAztbPgNxaUnHYlr8saWyAQxVD
        AOBsT5fXlVQctqHfiP6NksYGOFQxBADO546SysM2vLF4GzpwbGIIAJzPV8oNJRWITX24pDEBDlkMAYDz
        6ZcR3l5SgdjEvykPlzQmwCGLIQBwfg+Wl5ZUJC7r0yWNBXDoYggAXMxflRtLKhMX9YHSD7incQAOXQwB
        gIv7VLm5pFJxXu8pj5e0fYBjEEMA4HLuLf38RioX19IvNOyHzp8qabsAxyKGAMDlfbf01/PeVlLZeLYX
        lHeWB0raFsCxiSEAsLkuIv0m8/eW/1D6NyP95vSfLu8od5V+gN3zHsApiSEAAMCEGAIAAEyIIQAAwIQY
        AgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyI
        IQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCE
        GAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABM
        iCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADA
        hBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAA
        TIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAA
        wIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIA
        AEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEA
        AMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgC
        AABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIgh
        AADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwIQY
        AgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyI
        IQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCE
        GAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABM
        iCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADA
        hBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAA
        TIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAA
        wIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIA
        AEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEA
        AMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgC
        AABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIghAADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwIQYAgAATIgh
        AADAhBgCAABMiCEAAMCEGAIAAEyIIQAAwLb94z/9fwUOdxiF9znSAAAAAElFTkSuQmCC
</value>
  </data>
</root>